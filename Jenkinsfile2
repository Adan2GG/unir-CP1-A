pipeline {
    agent any

     stages {
        stage('Get Code') {
            steps {
                // Obtener código del repo
                git 'https://github.com/anieto-unir/helloworld.git'
            }
        }

        stage('Static') {
            steps {
                bat '''
                    flake8 --exit-zero --format=pylint app >flake8.out
                '''  
                script
                {
                    def flake8 = scanForIssues tool: flake8(pattern: 'flake8.out')
                    publishIssues issues: [flake8]
                }
            }
        }

        stage('Build&Deploy') {
            steps {
                echo 'Eyyy, esto es Python. No hay que compilar nada!!!'
                echo 'Y ya está desplegado en local :)'
    	        echo WORKSPACE
    	        bat '''
    	           dir
    	        '''
            }
        }

        stage('Ejecución Tests') {
            steps {
                bat '''
                    set PYTHONPATH=%WORKSPACE%
                    coverage run --branch --source=app --omit=app\\__init__.py,app\\api.py -m pytest --junitxml=result-unit.xml test\\unit
                    exit 0
                '''
            }
        }
        
        stage('Cobertura')
        {
            steps {
                bat '''
                    coverage xml
                '''
                cobertura coberturaReportFile: 'coverage.xml', onlyStable:false, lineCoverageTargets: '100,95,70'
            }
        }

        stage('Unit') {
            steps {
                junit 'result*.xml'
            }
        }


        stage('Seguridad') {
            steps {
                bat '''
                    bandit -r . -f custom -o bandit.out --msg-template "{relpath}:{line}: [{test_id}] {msg}"
                    exit 0
                '''  
                script
                {
                    def bandit = scanForIssues tool: pyLint(pattern: 'bandit.out')
                    publishIssues issues: [bandit]
                }
            }            
        }
        
        stage('Performance') {
            steps {
                bat '''
                    C:\\Unir\\Ejercicios\\apache-jmeter-5.4.3\\bin\\jmeter -n -t test\\jmeter\\flask.jmx -f -l flask.jtl
                '''  
                perfReport sourceDataFiles: 'flask.jtl'
            }            
        }
        
        
    }

}
